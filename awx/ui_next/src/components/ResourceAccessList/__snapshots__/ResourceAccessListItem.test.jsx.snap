// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ResourceAccessListItem /> initially renders succesfully 1`] = `
<ResourceAccessListItem
  accessRecord={
    Object {
      "first_name": "jane",
      "id": 2,
      "last_name": "brown",
      "summary_fields": Object {
        "direct_access": Array [
          Object {
            "role": Object {
              "id": 3,
              "name": "Member",
              "resource_name": "Org",
              "resource_type": "organization",
              "team_id": 5,
              "team_name": "The Team",
              "user_capabilities": Object {
                "unattach": true,
              },
            },
          },
        ],
        "indirect_access": Array [],
      },
      "url": "/bar",
      "username": "jane",
    }
  }
  i18n={"/i18n/"}
  onRoleDelete={[Function]}
>
  <DataListItem
    aria-labelledby="access-list-item"
    id="2"
    key="2"
  >
    <li
      aria-labelledby="access-list-item"
      className="pf-c-data-list__item"
      id="2"
    >
      <DataListItemRow
        key=".0"
        rowid="access-list-item"
      >
        <div
          className="pf-c-data-list__item-row"
        >
          <ResourceAccessListItem__DataListItemCells
            dataListCells={
              Array [
                <ForwardRef(Styled(PFDataListCell))>
                  <TextContent>
                    <Text
                      component="h6"
                    >
                      <ForwardRef(ResourceAccessListItem___StyledLink)
                        to={
                          Object {
                            "pathname": "/users/2/details",
                          }
                        }
                      >
                        jane
                      </ForwardRef(ResourceAccessListItem___StyledLink)>
                    </Text>
                  </TextContent>
                  <ForwardRef(Styled(DetailList))
                    stacked={true}
                  >
                    <Detail
                      alwaysVisible={false}
                      fullWidth={false}
                      label="Name"
                      value="jane brown"
                    />
                  </ForwardRef(Styled(DetailList))>
                </ForwardRef(Styled(PFDataListCell))>,
                <ForwardRef(Styled(PFDataListCell))>
                  <ForwardRef(Styled(DetailList))
                    stacked={true}
                  >
                    <Detail
                      alwaysVisible={false}
                      fullWidth={false}
                      label="Team Roles"
                      value={
                        <WithI18n
                          numChips={5}
                          totalChips={1}
                        >
                          <Unknown
                            isReadOnly={false}
                            onClick={[Function]}
                          >
                            Member
                          </Unknown>
                        </WithI18n>
                      }
                    />
                  </ForwardRef(Styled(DetailList))>
                </ForwardRef(Styled(PFDataListCell))>,
              ]
            }
            key=".0"
            rowid="access-list-item"
          >
            <StyledComponent
              dataListCells={
                Array [
                  <ForwardRef(Styled(PFDataListCell))>
                    <TextContent>
                      <Text
                        component="h6"
                      >
                        <ForwardRef(ResourceAccessListItem___StyledLink)
                          to={
                            Object {
                              "pathname": "/users/2/details",
                            }
                          }
                        >
                          jane
                        </ForwardRef(ResourceAccessListItem___StyledLink)>
                      </Text>
                    </TextContent>
                    <ForwardRef(Styled(DetailList))
                      stacked={true}
                    >
                      <Detail
                        alwaysVisible={false}
                        fullWidth={false}
                        label="Name"
                        value="jane brown"
                      />
                    </ForwardRef(Styled(DetailList))>
                  </ForwardRef(Styled(PFDataListCell))>,
                  <ForwardRef(Styled(PFDataListCell))>
                    <ForwardRef(Styled(DetailList))
                      stacked={true}
                    >
                      <Detail
                        alwaysVisible={false}
                        fullWidth={false}
                        label="Team Roles"
                        value={
                          <WithI18n
                            numChips={5}
                            totalChips={1}
                          >
                            <Unknown
                              isReadOnly={false}
                              onClick={[Function]}
                            >
                              Member
                            </Unknown>
                          </WithI18n>
                        }
                      />
                    </ForwardRef(Styled(DetailList))>
                  </ForwardRef(Styled(PFDataListCell))>,
                ]
              }
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "ResourceAccessListItem__DataListItemCells-sc-658iqk-0",
                    "isStatic": false,
                    "lastClassName": "jCdAGK",
                    "rules": Array [
                      "align-items:start;",
                    ],
                  },
                  "displayName": "ResourceAccessListItem__DataListItemCells",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "ResourceAccessListItem__DataListItemCells-sc-658iqk-0",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              rowid="access-list-item"
            >
              <DataListItemCells
                className="ResourceAccessListItem__DataListItemCells-sc-658iqk-0 jCdAGK"
                dataListCells={
                  Array [
                    <ForwardRef(Styled(PFDataListCell))>
                      <TextContent>
                        <Text
                          component="h6"
                        >
                          <ForwardRef(ResourceAccessListItem___StyledLink)
                            to={
                              Object {
                                "pathname": "/users/2/details",
                              }
                            }
                          >
                            jane
                          </ForwardRef(ResourceAccessListItem___StyledLink)>
                        </Text>
                      </TextContent>
                      <ForwardRef(Styled(DetailList))
                        stacked={true}
                      >
                        <Detail
                          alwaysVisible={false}
                          fullWidth={false}
                          label="Name"
                          value="jane brown"
                        />
                      </ForwardRef(Styled(DetailList))>
                    </ForwardRef(Styled(PFDataListCell))>,
                    <ForwardRef(Styled(PFDataListCell))>
                      <ForwardRef(Styled(DetailList))
                        stacked={true}
                      >
                        <Detail
                          alwaysVisible={false}
                          fullWidth={false}
                          label="Team Roles"
                          value={
                            <WithI18n
                              numChips={5}
                              totalChips={1}
                            >
                              <Unknown
                                isReadOnly={false}
                                onClick={[Function]}
                              >
                                Member
                              </Unknown>
                            </WithI18n>
                          }
                        />
                      </ForwardRef(Styled(DetailList))>
                    </ForwardRef(Styled(PFDataListCell))>,
                  ]
                }
                rowid="access-list-item"
              >
                <div
                  className="pf-c-data-list__item-content ResourceAccessListItem__DataListItemCells-sc-658iqk-0 jCdAGK"
                >
                  <DataListCell
                    key="name"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "kruorc",
                            "rules": Array [
                              "
  word-break: break-word;
",
                            ],
                          },
                          "displayName": "DataListCell",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <PFDataListCell
                        className="sc-bdVaJa kruorc"
                      >
                        <div
                          className="pf-c-data-list__cell sc-bdVaJa kruorc"
                        >
                          <TextContent>
                            <div
                              className="pf-c-content"
                            >
                              <Text
                                component="h6"
                              >
                                <h6
                                  className=""
                                  data-pf-content={true}
                                >
                                  <ResourceAccessListItem___StyledLink
                                    to={
                                      Object {
                                        "pathname": "/users/2/details",
                                      }
                                    }
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "ResourceAccessListItem___StyledLink-sc-658iqk-1",
                                            "isStatic": false,
                                            "lastClassName": "ddHgXz",
                                            "rules": Array [
                                              "font-weight:bold",
                                            ],
                                          },
                                          "displayName": "ResourceAccessListItem___StyledLink",
                                          "foldedComponentIds": Array [],
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                          "styledComponentId": "ResourceAccessListItem___StyledLink-sc-658iqk-1",
                                          "target": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "displayName": "Link",
                                            "propTypes": Object {
                                              "innerRef": [Function],
                                              "onClick": [Function],
                                              "replace": [Function],
                                              "target": [Function],
                                              "to": [Function],
                                            },
                                            "render": [Function],
                                          },
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      to={
                                        Object {
                                          "pathname": "/users/2/details",
                                        }
                                      }
                                    >
                                      <Link
                                        className="ResourceAccessListItem___StyledLink-sc-658iqk-1 ddHgXz"
                                        to={
                                          Object {
                                            "pathname": "/users/2/details",
                                          }
                                        }
                                      >
                                        <LinkAnchor
                                          className="ResourceAccessListItem___StyledLink-sc-658iqk-1 ddHgXz"
                                          href="/users/2/details"
                                          navigate={[Function]}
                                        >
                                          <a
                                            className="ResourceAccessListItem___StyledLink-sc-658iqk-1 ddHgXz"
                                            href="/users/2/details"
                                            onClick={[Function]}
                                          >
                                            jane
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </StyledComponent>
                                  </ResourceAccessListItem___StyledLink>
                                </h6>
                              </Text>
                            </div>
                          </TextContent>
                          <Styled(DetailList)
                            stacked={true}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bwzfXH",
                                    "isStatic": false,
                                    "lastClassName": "kVCDmm",
                                    "rules": Array [
                                      "
  display: grid;
  grid-gap: 20px;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "Styled(DetailList)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bwzfXH",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              stacked={true}
                            >
                              <DetailList
                                className="sc-bwzfXH kVCDmm"
                                stacked={true}
                              >
                                <TextList
                                  className="sc-bwzfXH kVCDmm"
                                  component="dl"
                                >
                                  <dl
                                    className="sc-bwzfXH kVCDmm"
                                    data-pf-content={true}
                                  >
                                    <Detail
                                      alwaysVisible={false}
                                      fullWidth={false}
                                      label="Name"
                                      value="jane brown"
                                    >
                                      <Styled(Component)
                                        component="dt"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <StyledComponent
                                          component="dt"
                                          data-cy={null}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "iYJcPm",
                                                "rules": Array [
                                                  "
  font-weight: var(--pf-global--FontWeight--bold);
  ",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "Styled(Component)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          fullWidth={false}
                                        >
                                          <Component
                                            className="sc-htpNat iYJcPm"
                                            component="dt"
                                            data-cy={null}
                                            fullWidth={false}
                                          >
                                            <TextListItem
                                              className="sc-htpNat iYJcPm"
                                              component="dt"
                                              data-cy={null}
                                            >
                                              <dt
                                                className="sc-htpNat iYJcPm"
                                                data-cy={null}
                                                data-pf-content={true}
                                              >
                                                Name
                                              </dt>
                                            </TextListItem>
                                          </Component>
                                        </StyledComponent>
                                      </Styled(Component)>
                                      <Styled(Component)
                                        component="dd"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <StyledComponent
                                          component="dd"
                                          data-cy={null}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bxivhb",
                                                "isStatic": false,
                                                "lastClassName": "gxmPlV",
                                                "rules": Array [
                                                  "
  word-break: break-all;
  ",
                                                  [Function],
                                                  "
  ",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "Styled(Component)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bxivhb",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          fullWidth={false}
                                        >
                                          <Component
                                            className="sc-bxivhb gxmPlV"
                                            component="dd"
                                            data-cy={null}
                                            fullWidth={false}
                                          >
                                            <TextListItem
                                              className="sc-bxivhb gxmPlV"
                                              component="dd"
                                              data-cy={null}
                                            >
                                              <dd
                                                className="sc-bxivhb gxmPlV"
                                                data-cy={null}
                                                data-pf-content={true}
                                              >
                                                jane brown
                                              </dd>
                                            </TextListItem>
                                          </Component>
                                        </StyledComponent>
                                      </Styled(Component)>
                                    </Detail>
                                  </dl>
                                </TextList>
                              </DetailList>
                            </StyledComponent>
                          </Styled(DetailList)>
                        </div>
                      </PFDataListCell>
                    </StyledComponent>
                  </DataListCell>
                  <DataListCell
                    key="roles"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": false,
                            "lastClassName": "kruorc",
                            "rules": Array [
                              "
  word-break: break-word;
",
                            ],
                          },
                          "displayName": "DataListCell",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <PFDataListCell
                        className="sc-bdVaJa kruorc"
                      >
                        <div
                          className="pf-c-data-list__cell sc-bdVaJa kruorc"
                        >
                          <Styled(DetailList)
                            stacked={true}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bwzfXH",
                                    "isStatic": false,
                                    "lastClassName": "kVCDmm",
                                    "rules": Array [
                                      "
  display: grid;
  grid-gap: 20px;
  align-items: center;
  ",
                                      [Function],
                                      "
",
                                    ],
                                  },
                                  "displayName": "Styled(DetailList)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-bwzfXH",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              stacked={true}
                            >
                              <DetailList
                                className="sc-bwzfXH kVCDmm"
                                stacked={true}
                              >
                                <TextList
                                  className="sc-bwzfXH kVCDmm"
                                  component="dl"
                                >
                                  <dl
                                    className="sc-bwzfXH kVCDmm"
                                    data-pf-content={true}
                                  >
                                    <Detail
                                      alwaysVisible={false}
                                      fullWidth={false}
                                      label="Team Roles"
                                      value={
                                        <WithI18n
                                          numChips={5}
                                          totalChips={1}
                                        >
                                          <Unknown
                                            isReadOnly={false}
                                            onClick={[Function]}
                                          >
                                            Member
                                          </Unknown>
                                        </WithI18n>
                                      }
                                    >
                                      <Styled(Component)
                                        component="dt"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <StyledComponent
                                          component="dt"
                                          data-cy={null}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "iYJcPm",
                                                "rules": Array [
                                                  "
  font-weight: var(--pf-global--FontWeight--bold);
  ",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "Styled(Component)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          fullWidth={false}
                                        >
                                          <Component
                                            className="sc-htpNat iYJcPm"
                                            component="dt"
                                            data-cy={null}
                                            fullWidth={false}
                                          >
                                            <TextListItem
                                              className="sc-htpNat iYJcPm"
                                              component="dt"
                                              data-cy={null}
                                            >
                                              <dt
                                                className="sc-htpNat iYJcPm"
                                                data-cy={null}
                                                data-pf-content={true}
                                              >
                                                Team Roles
                                              </dt>
                                            </TextListItem>
                                          </Component>
                                        </StyledComponent>
                                      </Styled(Component)>
                                      <Styled(Component)
                                        component="dd"
                                        data-cy={null}
                                        fullWidth={false}
                                      >
                                        <StyledComponent
                                          component="dd"
                                          data-cy={null}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bxivhb",
                                                "isStatic": false,
                                                "lastClassName": "gxmPlV",
                                                "rules": Array [
                                                  "
  word-break: break-all;
  ",
                                                  [Function],
                                                  "
  ",
                                                  [Function],
                                                  "
",
                                                ],
                                              },
                                              "displayName": "Styled(Component)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bxivhb",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          fullWidth={false}
                                        >
                                          <Component
                                            className="sc-bxivhb gxmPlV"
                                            component="dd"
                                            data-cy={null}
                                            fullWidth={false}
                                          >
                                            <TextListItem
                                              className="sc-bxivhb gxmPlV"
                                              component="dd"
                                              data-cy={null}
                                            >
                                              <dd
                                                className="sc-bxivhb gxmPlV"
                                                data-cy={null}
                                                data-pf-content={true}
                                              >
                                                <WithI18n
                                                  numChips={5}
                                                  totalChips={1}
                                                >
                                                  <I18n
                                                    update={true}
                                                    withHash={true}
                                                  >
                                                    <ChipGroup
                                                      i18n={"/i18n/"}
                                                      numChips={5}
                                                      totalChips={1}
                                                    >
                                                      <ChipGroup
                                                        className=""
                                                        collapsedText="-4 more"
                                                        defaultIsOpen={false}
                                                        expandedText="Show less"
                                                        numChips={5}
                                                        withToolbar={false}
                                                      >
                                                        <ul
                                                          className="pf-c-chip-group"
                                                        >
                                                          <InnerChipGroup
                                                            className=""
                                                            collapsedText="-4 more"
                                                            defaultIsOpen={false}
                                                            expandedText="Show less"
                                                            isOpen={false}
                                                            numChips={5}
                                                            onToggleCollapse={[Function]}
                                                            withToolbar={false}
                                                          >
                                                            <Component
                                                              component="li"
                                                              isReadOnly={false}
                                                              key=".$3"
                                                              onClick={[Function]}
                                                            >
                                                              <ComponentWithOuia
                                                                component={[Function]}
                                                                componentProps={
                                                                  Object {
                                                                    "children": "Member",
                                                                    "component": "li",
                                                                    "isReadOnly": false,
                                                                    "onClick": [Function],
                                                                  }
                                                                }
                                                                consumerContext={null}
                                                              >
                                                                <Chip
                                                                  className=""
                                                                  closeBtnAriaLabel="close"
                                                                  component="li"
                                                                  isOverflowChip={false}
                                                                  isReadOnly={false}
                                                                  onClick={[Function]}
                                                                  ouiaContext={
                                                                    Object {
                                                                      "isOuia": false,
                                                                      "ouiaId": null,
                                                                    }
                                                                  }
                                                                  tooltipPosition="top"
                                                                >
                                                                  <GenerateId
                                                                    prefix="pf-random-id-"
                                                                  >
                                                                    <li
                                                                      className="pf-c-chip"
                                                                    >
                                                                      <span
                                                                        className="pf-c-chip__text"
                                                                        id="pf-random-id-0"
                                                                      >
                                                                        Member
                                                                      </span>
                                                                      <ChipButton
                                                                        aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                        ariaLabel="close"
                                                                        id="remove_pf-random-id-0"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <Component
                                                                          aria-label="close"
                                                                          aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                          className=""
                                                                          id="remove_pf-random-id-0"
                                                                          onClick={[Function]}
                                                                          variant="plain"
                                                                        >
                                                                          <ComponentWithOuia
                                                                            component={[Function]}
                                                                            componentProps={
                                                                              Object {
                                                                                "aria-label": "close",
                                                                                "aria-labelledby": "remove_pf-random-id-0 pf-random-id-0",
                                                                                "children": <TimesCircleIcon
                                                                                  aria-hidden="true"
                                                                                  color="currentColor"
                                                                                  noVerticalAlign={false}
                                                                                  size="sm"
                                                                                  title={null}
                                                                                />,
                                                                                "className": "",
                                                                                "id": "remove_pf-random-id-0",
                                                                                "onClick": [Function],
                                                                                "variant": "plain",
                                                                              }
                                                                            }
                                                                            consumerContext={
                                                                              Object {
                                                                                "isOuia": false,
                                                                                "ouiaId": null,
                                                                              }
                                                                            }
                                                                          >
                                                                            <Button
                                                                              aria-label="close"
                                                                              aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                              className=""
                                                                              id="remove_pf-random-id-0"
                                                                              onClick={[Function]}
                                                                              ouiaContext={
                                                                                Object {
                                                                                  "isOuia": false,
                                                                                  "ouiaId": null,
                                                                                }
                                                                              }
                                                                              variant="plain"
                                                                            >
                                                                              <button
                                                                                aria-disabled={null}
                                                                                aria-label="close"
                                                                                aria-labelledby="remove_pf-random-id-0 pf-random-id-0"
                                                                                className="pf-c-button pf-m-plain"
                                                                                disabled={false}
                                                                                id="remove_pf-random-id-0"
                                                                                onClick={[Function]}
                                                                                tabIndex={null}
                                                                                type="button"
                                                                              >
                                                                                <TimesCircleIcon
                                                                                  aria-hidden="true"
                                                                                  color="currentColor"
                                                                                  noVerticalAlign={false}
                                                                                  size="sm"
                                                                                  title={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    aria-labelledby={null}
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style={
                                                                                      Object {
                                                                                        "verticalAlign": "-0.125em",
                                                                                      }
                                                                                    }
                                                                                    viewBox="0 0 512 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z"
                                                                                      transform=""
                                                                                    />
                                                                                  </svg>
                                                                                </TimesCircleIcon>
                                                                              </button>
                                                                            </Button>
                                                                          </ComponentWithOuia>
                                                                        </Component>
                                                                      </ChipButton>
                                                                    </li>
                                                                  </GenerateId>
                                                                </Chip>
                                                              </ComponentWithOuia>
                                                            </Component>
                                                          </InnerChipGroup>
                                                        </ul>
                                                      </ChipGroup>
                                                    </ChipGroup>
                                                  </I18n>
                                                </WithI18n>
                                              </dd>
                                            </TextListItem>
                                          </Component>
                                        </StyledComponent>
                                      </Styled(Component)>
                                    </Detail>
                                  </dl>
                                </TextList>
                              </DetailList>
                            </StyledComponent>
                          </Styled(DetailList)>
                        </div>
                      </PFDataListCell>
                    </StyledComponent>
                  </DataListCell>
                </div>
              </DataListItemCells>
            </StyledComponent>
          </ResourceAccessListItem__DataListItemCells>
        </div>
      </DataListItemRow>
    </li>
  </DataListItem>
</ResourceAccessListItem>
`;
