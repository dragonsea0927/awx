// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OrganizationNotifications /> initially renders succesfully 1`] = `
<Wrap>
  <RootDialogProvider
    value={Object {}}
  >
    <Provider
      value={
        Object {
          "api": "/api/",
          "handleHttpError": [Function],
        }
      }
    >
      <Component
        i18n={"/i18n/"}
        value={"/config/"}
      >
        <Provider
          api={"/api/"}
          handleHttpError={[Function]}
          i18n={"/i18n/"}
          value={"/config/"}
        >
          <Component
            canToggleNotifications={true}
            id={1}
          >
            <withRouter(OrganizationNotifications)
              api={"/api/"}
              canToggleNotifications={true}
              handleHttpError={[Function]}
              id={1}
            >
              <Route>
                <OrganizationNotifications
                  api={"/api/"}
                  canToggleNotifications={true}
                  handleHttpError={[Function]}
                  history={"/history/"}
                  id={1}
                  location={
                    Object {
                      "hash": "",
                      "pathname": "",
                      "search": "",
                      "state": "",
                    }
                  }
                  match={
                    Object {
                      "isExact": false,
                      "params": Object {},
                      "path": "",
                      "url": "",
                    }
                  }
                >
                  <withRouter(PaginatedDataList)
                    itemCount={2}
                    itemName="notification"
                    items={
                      Array [
                        Object {
                          "id": 1,
                          "name": "Notification one",
                          "notification_type": "email",
                          "url": "/api/v2/notification_templates/1/",
                        },
                        Object {
                          "id": 2,
                          "name": "Notification two",
                          "notification_type": "email",
                          "url": "/api/v2/notification_templates/2/",
                        },
                      ]
                    }
                    qsConfig={
                      Object {
                        "defaultParams": Object {
                          "order_by": "name",
                          "page": 1,
                          "page_size": 5,
                        },
                        "integerFields": Array [
                          "page",
                          "page_size",
                        ],
                        "namespace": "notification",
                      }
                    }
                    renderItem={[Function]}
                    toolbarColumns={
                      Array [
                        Object {
                          "isSortable": true,
                          "key": "name",
                          "name": "Name",
                        },
                        Object {
                          "isNumeric": true,
                          "isSortable": true,
                          "key": "modified",
                          "name": "Modified",
                        },
                        Object {
                          "isNumeric": true,
                          "isSortable": true,
                          "key": "created",
                          "name": "Created",
                        },
                      ]
                    }
                  >
                    <Route>
                      <PaginatedDataList
                        additionalControls={Array []}
                        alignToolbarLeft={false}
                        history={"/history/"}
                        isAllSelected={false}
                        itemCount={2}
                        itemName="notification"
                        itemNamePlural=""
                        items={
                          Array [
                            Object {
                              "id": 1,
                              "name": "Notification one",
                              "notification_type": "email",
                              "url": "/api/v2/notification_templates/1/",
                            },
                            Object {
                              "id": 2,
                              "name": "Notification two",
                              "notification_type": "email",
                              "url": "/api/v2/notification_templates/2/",
                            },
                          ]
                        }
                        location={
                          Object {
                            "hash": "",
                            "pathname": "",
                            "search": "",
                            "state": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": false,
                            "params": Object {},
                            "path": "",
                            "url": "",
                          }
                        }
                        onSelectAll={null}
                        paginationStyling={null}
                        qsConfig={
                          Object {
                            "defaultParams": Object {
                              "order_by": "name",
                              "page": 1,
                              "page_size": 5,
                            },
                            "integerFields": Array [
                              "page",
                              "page_size",
                            ],
                            "namespace": "notification",
                          }
                        }
                        renderItem={[Function]}
                        showPageSizeOptions={true}
                        showSelectAll={false}
                        toolbarColumns={
                          Array [
                            Object {
                              "isSortable": true,
                              "key": "name",
                              "name": "Name",
                            },
                            Object {
                              "isNumeric": true,
                              "isSortable": true,
                              "key": "modified",
                              "name": "Modified",
                            },
                            Object {
                              "isNumeric": true,
                              "isSortable": true,
                              "key": "created",
                              "name": "Created",
                            },
                          ]
                        }
                      >
                        <I18n
                          update={true}
                          withHash={true}
                        >
                          <DataListToolbar
                            additionalControls={Array []}
                            columns={
                              Array [
                                Object {
                                  "isSortable": true,
                                  "key": "name",
                                  "name": "Name",
                                },
                                Object {
                                  "isNumeric": true,
                                  "isSortable": true,
                                  "key": "modified",
                                  "name": "Modified",
                                },
                                Object {
                                  "isNumeric": true,
                                  "isSortable": true,
                                  "key": "created",
                                  "name": "Created",
                                },
                              ]
                            }
                            isAllSelected={false}
                            isCompact={false}
                            noLeftMargin={false}
                            onCompact={null}
                            onExpand={null}
                            onSearch={[Function]}
                            onSelectAll={null}
                            onSort={[Function]}
                            showSelectAll={false}
                            sortOrder="ascending"
                            sortedColumnKey="name"
                          >
                            <I18n
                              update={true}
                              withHash={true}
                            >
                              <DataListToolbar__AWXToolbar>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "DataListToolbar__AWXToolbar-ajzso8-0",
                                        "isStatic": true,
                                        "lastClassName": "bKIKDr",
                                        "rules": Array [
                                          "--awx-toolbar--BackgroundColor:var(--pf-global--BackgroundColor--light-100);--awx-toolbar--BorderColor:#ebebeb;--awx-toolbar--BorderWidth:var(--pf-global--BorderWidth--sm);--pf-global--target-size--MinHeight:0;--pf-global--target-size--MinWidth:0;--pf-global--FontSize--md:14px;border-bottom:var(--awx-toolbar--BorderWidth) solid var(--awx-toolbar--BorderColor);background-color:var(--awx-toolbar--BackgroundColor);display:flex;min-height:70px;flex-grow:1;",
                                        ],
                                      },
                                      "displayName": "DataListToolbar__AWXToolbar",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "DataListToolbar__AWXToolbar-ajzso8-0",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="DataListToolbar__AWXToolbar-ajzso8-0 bKIKDr"
                                  >
                                    <DataListToolbar__Toolbar
                                      marginleft={0}
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DataListToolbar__Toolbar-ajzso8-1",
                                              "isStatic": false,
                                              "lastClassName": "dwCtVz",
                                              "rules": Array [
                                                "flex-grow:1;margin-left:",
                                                [Function],
                                                ";",
                                              ],
                                            },
                                            "displayName": "DataListToolbar__Toolbar",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DataListToolbar__Toolbar-ajzso8-1",
                                            "target": [Function],
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        marginleft={0}
                                      >
                                        <Toolbar
                                          className="DataListToolbar__Toolbar-ajzso8-1 dwCtVz"
                                          marginleft={0}
                                        >
                                          <div
                                            className="pf-l-toolbar DataListToolbar__Toolbar-ajzso8-1 dwCtVz"
                                            marginleft={0}
                                          >
                                            <DataListToolbar__ColumnLeft>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "DataListToolbar__ColumnLeft-ajzso8-3",
                                                      "isStatic": true,
                                                      "lastClassName": "feZLWt",
                                                      "rules": Array [
                                                        "display:flex;flex-basis:100%;justify-content:flex-start;align-items:center;padding:10px 0 8px 0;@media screen and (min-width:980px){flex-basis:50%;}",
                                                      ],
                                                    },
                                                    "displayName": "DataListToolbar__ColumnLeft",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "DataListToolbar__ColumnLeft-ajzso8-3",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="DataListToolbar__ColumnLeft-ajzso8-3 feZLWt"
                                                >
                                                  <Styled(ToolbarItem)>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-bwzfXH",
                                                            "isStatic": true,
                                                            "lastClassName": "iBEPfq",
                                                            "rules": Array [
                                                              "flex-grow: 1;",
                                                            ],
                                                          },
                                                          "displayName": "Styled(ToolbarItem)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-bwzfXH",
                                                          "target": [Function],
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <ToolbarItem
                                                        className="sc-bwzfXH iBEPfq"
                                                      >
                                                        <div
                                                          className="pf-l-toolbar__item sc-bwzfXH iBEPfq"
                                                        >
                                                          <Search
                                                            columns={
                                                              Array [
                                                                Object {
                                                                  "isSortable": true,
                                                                  "key": "name",
                                                                  "name": "Name",
                                                                },
                                                                Object {
                                                                  "isNumeric": true,
                                                                  "isSortable": true,
                                                                  "key": "modified",
                                                                  "name": "Modified",
                                                                },
                                                                Object {
                                                                  "isNumeric": true,
                                                                  "isSortable": true,
                                                                  "key": "created",
                                                                  "name": "Created",
                                                                },
                                                              ]
                                                            }
                                                            onSearch={[Function]}
                                                            sortedColumnKey="name"
                                                          >
                                                            <I18n
                                                              update={true}
                                                              withHash={true}
                                                            >
                                                              <div
                                                                className="pf-c-input-group"
                                                              >
                                                                <Search__Dropdown
                                                                  dropdownItems={
                                                                    Array [
                                                                      <Item
                                                                        className=""
                                                                        component="button"
                                                                        href="#"
                                                                        isDisabled={false}
                                                                        isHovered={false}
                                                                      >
                                                                        Modified
                                                                      </Item>,
                                                                      <Item
                                                                        className=""
                                                                        component="button"
                                                                        href="#"
                                                                        isDisabled={false}
                                                                        isHovered={false}
                                                                      >
                                                                        Created
                                                                      </Item>,
                                                                    ]
                                                                  }
                                                                  isOpen={false}
                                                                  onSelect={[Function]}
                                                                  onToggle={[Function]}
                                                                  toggle={
                                                                    <DropdownToggle
                                                                      className=""
                                                                      iconComponent={[Function]}
                                                                      id="awx-search"
                                                                      isActive={false}
                                                                      isFocused={false}
                                                                      isHovered={false}
                                                                      isOpen={false}
                                                                      isPlain={false}
                                                                      onToggle={[Function]}
                                                                      parentRef={null}
                                                                    >
                                                                      Name
                                                                    </DropdownToggle>
                                                                  }
                                                                >
                                                                  <StyledComponent
                                                                    dropdownItems={
                                                                      Array [
                                                                        <Item
                                                                          className=""
                                                                          component="button"
                                                                          href="#"
                                                                          isDisabled={false}
                                                                          isHovered={false}
                                                                        >
                                                                          Modified
                                                                        </Item>,
                                                                        <Item
                                                                          className=""
                                                                          component="button"
                                                                          href="#"
                                                                          isDisabled={false}
                                                                          isHovered={false}
                                                                        >
                                                                          Created
                                                                        </Item>,
                                                                      ]
                                                                    }
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Search__Dropdown-sc-1dwuww3-2",
                                                                          "isStatic": true,
                                                                          "lastClassName": "kcnywV",
                                                                          "rules": Array [
                                                                            "&&&{> button{min-height:30px;min-width:70px;height:30px;padding:0 10px;margin:0px;> span{width:auto;}> svg{margin:0px;padding-top:3px;padding-left:3px;}}}",
                                                                          ],
                                                                        },
                                                                        "displayName": "Search__Dropdown",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Search__Dropdown-sc-1dwuww3-2",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    isOpen={false}
                                                                    onSelect={[Function]}
                                                                    onToggle={[Function]}
                                                                    toggle={
                                                                      <DropdownToggle
                                                                        className=""
                                                                        iconComponent={[Function]}
                                                                        id="awx-search"
                                                                        isActive={false}
                                                                        isFocused={false}
                                                                        isHovered={false}
                                                                        isOpen={false}
                                                                        isPlain={false}
                                                                        onToggle={[Function]}
                                                                        parentRef={null}
                                                                      >
                                                                        Name
                                                                      </DropdownToggle>
                                                                    }
                                                                  >
                                                                    <Dropdown
                                                                      className="Search__Dropdown-sc-1dwuww3-2 kcnywV"
                                                                      direction="down"
                                                                      dropdownItems={
                                                                        Array [
                                                                          <Item
                                                                            className=""
                                                                            component="button"
                                                                            href="#"
                                                                            isDisabled={false}
                                                                            isHovered={false}
                                                                          >
                                                                            Modified
                                                                          </Item>,
                                                                          <Item
                                                                            className=""
                                                                            component="button"
                                                                            href="#"
                                                                            isDisabled={false}
                                                                            isHovered={false}
                                                                          >
                                                                            Created
                                                                          </Item>,
                                                                        ]
                                                                      }
                                                                      isOpen={false}
                                                                      isPlain={false}
                                                                      onSelect={[Function]}
                                                                      onToggle={[Function]}
                                                                      position="left"
                                                                      toggle={
                                                                        <DropdownToggle
                                                                          className=""
                                                                          iconComponent={[Function]}
                                                                          id="awx-search"
                                                                          isActive={false}
                                                                          isFocused={false}
                                                                          isHovered={false}
                                                                          isOpen={false}
                                                                          isPlain={false}
                                                                          onToggle={[Function]}
                                                                          parentRef={null}
                                                                        >
                                                                          Name
                                                                        </DropdownToggle>
                                                                      }
                                                                    >
                                                                      <div
                                                                        className="pf-c-dropdown Search__Dropdown-sc-1dwuww3-2 kcnywV"
                                                                        onToggle={[Function]}
                                                                      >
                                                                        <DropdownToggle
                                                                          ariaHasPopup={true}
                                                                          className=""
                                                                          iconComponent={[Function]}
                                                                          id="awx-search"
                                                                          isActive={false}
                                                                          isFocused={false}
                                                                          isHovered={false}
                                                                          isOpen={false}
                                                                          isPlain={false}
                                                                          key=".0"
                                                                          onEnter={[Function]}
                                                                          onToggle={[Function]}
                                                                          parentRef={
                                                                            <div
                                                                              class="pf-c-dropdown Search__Dropdown-sc-1dwuww3-2 kcnywV"
                                                                            >
                                                                              <button
                                                                                aria-expanded="false"
                                                                                aria-haspopup="true"
                                                                                class="pf-c-dropdown__toggle"
                                                                                id="awx-search"
                                                                                type="button"
                                                                              >
                                                                                <span
                                                                                  class="pf-c-dropdown__toggle-text"
                                                                                >
                                                                                  Name
                                                                                </span>
                                                                                <svg
                                                                                  aria-hidden="true"
                                                                                  class="pf-c-dropdown__toggle-icon"
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style="vertical-align: -0.125em;"
                                                                                  viewBox="0 0 320 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                    transform=""
                                                                                  />
                                                                                </svg>
                                                                              </button>
                                                                            </div>
                                                                          }
                                                                        >
                                                                          <DropdownToggle
                                                                            ariaHasPopup={true}
                                                                            className=""
                                                                            id="awx-search"
                                                                            isActive={false}
                                                                            isDisabled={false}
                                                                            isFocused={false}
                                                                            isHovered={false}
                                                                            isOpen={false}
                                                                            isPlain={false}
                                                                            onEnter={[Function]}
                                                                            onToggle={[Function]}
                                                                            parentRef={
                                                                              <div
                                                                                class="pf-c-dropdown Search__Dropdown-sc-1dwuww3-2 kcnywV"
                                                                              >
                                                                                <button
                                                                                  aria-expanded="false"
                                                                                  aria-haspopup="true"
                                                                                  class="pf-c-dropdown__toggle"
                                                                                  id="awx-search"
                                                                                  type="button"
                                                                                >
                                                                                  <span
                                                                                    class="pf-c-dropdown__toggle-text"
                                                                                  >
                                                                                    Name
                                                                                  </span>
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    class="pf-c-dropdown__toggle-icon"
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style="vertical-align: -0.125em;"
                                                                                    viewBox="0 0 320 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                      transform=""
                                                                                    />
                                                                                  </svg>
                                                                                </button>
                                                                              </div>
                                                                            }
                                                                          >
                                                                            <button
                                                                              aria-expanded={false}
                                                                              aria-haspopup={true}
                                                                              className="pf-c-dropdown__toggle"
                                                                              disabled={false}
                                                                              id="awx-search"
                                                                              onClick={[Function]}
                                                                              onKeyDown={[Function]}
                                                                              type="button"
                                                                            >
                                                                              <span
                                                                                className="pf-c-dropdown__toggle-text"
                                                                              >
                                                                                Name
                                                                              </span>
                                                                              <CaretDownIcon
                                                                                className="pf-c-dropdown__toggle-icon"
                                                                                color="currentColor"
                                                                                size="sm"
                                                                                title={null}
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  aria-labelledby={null}
                                                                                  className="pf-c-dropdown__toggle-icon"
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style={
                                                                                    Object {
                                                                                      "verticalAlign": "-0.125em",
                                                                                    }
                                                                                  }
                                                                                  viewBox="0 0 320 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                    transform=""
                                                                                  />
                                                                                </svg>
                                                                              </CaretDownIcon>
                                                                            </button>
                                                                          </DropdownToggle>
                                                                        </DropdownToggle>
                                                                      </div>
                                                                    </Dropdown>
                                                                  </StyledComponent>
                                                                </Search__Dropdown>
                                                                <Search__TextInput
                                                                  aria-label="Search text input"
                                                                  onChange={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "height": "30px",
                                                                    }
                                                                  }
                                                                  type="search"
                                                                  value=""
                                                                >
                                                                  <StyledComponent
                                                                    aria-label="Search text input"
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Search__TextInput-sc-1dwuww3-0",
                                                                          "isStatic": true,
                                                                          "lastClassName": "EgkYH",
                                                                          "rules": Array [
                                                                            "min-height:0px;height:30px;",
                                                                          ],
                                                                        },
                                                                        "displayName": "Search__TextInput",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Search__TextInput-sc-1dwuww3-0",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    onChange={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "height": "30px",
                                                                      }
                                                                    }
                                                                    type="search"
                                                                    value=""
                                                                  >
                                                                    <TextInput
                                                                      aria-label="Search text input"
                                                                      className="Search__TextInput-sc-1dwuww3-0 EgkYH"
                                                                      isDisabled={false}
                                                                      isReadOnly={false}
                                                                      isRequired={false}
                                                                      isValid={true}
                                                                      onChange={[Function]}
                                                                      style={
                                                                        Object {
                                                                          "height": "30px",
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      value=""
                                                                    >
                                                                      <input
                                                                        aria-invalid={false}
                                                                        aria-label="Search text input"
                                                                        className="pf-c-form-control Search__TextInput-sc-1dwuww3-0 EgkYH"
                                                                        disabled={false}
                                                                        onChange={[Function]}
                                                                        readOnly={false}
                                                                        required={false}
                                                                        style={
                                                                          Object {
                                                                            "height": "30px",
                                                                          }
                                                                        }
                                                                        type="search"
                                                                        value=""
                                                                      />
                                                                    </TextInput>
                                                                  </StyledComponent>
                                                                </Search__TextInput>
                                                                <Search__Button
                                                                  aria-label="Search"
                                                                  onClick={[Function]}
                                                                  variant="tertiary"
                                                                >
                                                                  <StyledComponent
                                                                    aria-label="Search"
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "Search__Button-sc-1dwuww3-1",
                                                                          "isStatic": true,
                                                                          "lastClassName": "jtZPEu",
                                                                          "rules": Array [
                                                                            "width:34px;padding:0px;",
                                                                          ],
                                                                        },
                                                                        "displayName": "Search__Button",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "Search__Button-sc-1dwuww3-1",
                                                                        "target": [Function],
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                    onClick={[Function]}
                                                                    variant="tertiary"
                                                                  >
                                                                    <Button
                                                                      aria-label="Search"
                                                                      className="Search__Button-sc-1dwuww3-1 jtZPEu"
                                                                      component="button"
                                                                      isActive={false}
                                                                      isBlock={false}
                                                                      isDisabled={false}
                                                                      isFocus={false}
                                                                      isHover={false}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                      variant="tertiary"
                                                                    >
                                                                      <button
                                                                        aria-disabled={null}
                                                                        aria-label="Search"
                                                                        className="pf-c-button pf-m-tertiary Search__Button-sc-1dwuww3-1 jtZPEu"
                                                                        disabled={false}
                                                                        onClick={[Function]}
                                                                        tabIndex={null}
                                                                        type="button"
                                                                      >
                                                                        <SearchIcon
                                                                          color="currentColor"
                                                                          size="sm"
                                                                          title={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            aria-labelledby={null}
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style={
                                                                              Object {
                                                                                "verticalAlign": "-0.125em",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 512 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </SearchIcon>
                                                                      </button>
                                                                    </Button>
                                                                  </StyledComponent>
                                                                </Search__Button>
                                                              </div>
                                                            </I18n>
                                                          </Search>
                                                        </div>
                                                      </ToolbarItem>
                                                    </StyledComponent>
                                                  </Styled(ToolbarItem)>
                                                  <VerticalSeparator>
                                                    <div>
                                                      <span
                                                        style={
                                                          Object {
                                                            "backgroundColor": "#d7d7d7",
                                                            "content": "",
                                                            "display": "inline-block",
                                                            "height": "30px",
                                                            "marginLeft": "20px",
                                                            "marginRight": "20px",
                                                            "verticalAlign": "middle",
                                                            "width": "1px",
                                                          }
                                                        }
                                                      />
                                                    </div>
                                                  </VerticalSeparator>
                                                </div>
                                              </StyledComponent>
                                            </DataListToolbar__ColumnLeft>
                                            <DataListToolbar__ColumnRight>
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "DataListToolbar__ColumnRight-ajzso8-4",
                                                      "isStatic": true,
                                                      "lastClassName": "Deoai",
                                                      "rules": Array [
                                                        "display:flex;flex-basis:100%;justify-content:flex-start;align-items:center;padding:10px 0 8px 0;@media screen and (min-width:980px){flex-basis:50%;}",
                                                        "padding:8px 0 10px 0;@media screen and (min-width:980px){margin-left:0;padding:10px 0 8px 0;}",
                                                      ],
                                                    },
                                                    "displayName": "DataListToolbar__ColumnRight",
                                                    "foldedComponentIds": Array [
                                                      "DataListToolbar__ColumnLeft-ajzso8-3",
                                                    ],
                                                    "render": [Function],
                                                    "styledComponentId": "DataListToolbar__ColumnRight-ajzso8-4",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="DataListToolbar__ColumnLeft-ajzso8-3 DataListToolbar__ColumnRight-ajzso8-4 Deoai"
                                                >
                                                  <ToolbarItem
                                                    className={null}
                                                  >
                                                    <div
                                                      className="pf-l-toolbar__item"
                                                    >
                                                      <Sort
                                                        columns={
                                                          Array [
                                                            Object {
                                                              "isSortable": true,
                                                              "key": "name",
                                                              "name": "Name",
                                                            },
                                                            Object {
                                                              "isNumeric": true,
                                                              "isSortable": true,
                                                              "key": "modified",
                                                              "name": "Modified",
                                                            },
                                                            Object {
                                                              "isNumeric": true,
                                                              "isSortable": true,
                                                              "key": "created",
                                                              "name": "Created",
                                                            },
                                                          ]
                                                        }
                                                        onSort={[Function]}
                                                        sortOrder="ascending"
                                                        sortedColumnKey="name"
                                                      >
                                                        <I18n
                                                          update={true}
                                                          withHash={true}
                                                        >
                                                          <Sort__Dropdown
                                                            dropdownItems={
                                                              Array [
                                                                <Item
                                                                  className=""
                                                                  component="button"
                                                                  href="#"
                                                                  isDisabled={false}
                                                                  isHovered={false}
                                                                >
                                                                  Modified
                                                                </Item>,
                                                                <Item
                                                                  className=""
                                                                  component="button"
                                                                  href="#"
                                                                  isDisabled={false}
                                                                  isHovered={false}
                                                                >
                                                                  Created
                                                                </Item>,
                                                              ]
                                                            }
                                                            isOpen={false}
                                                            onSelect={[Function]}
                                                            onToggle={[Function]}
                                                            style={
                                                              Object {
                                                                "marginRight": "20px",
                                                              }
                                                            }
                                                            toggle={
                                                              <DropdownToggle
                                                                className=""
                                                                iconComponent={[Function]}
                                                                id="awx-sort"
                                                                isActive={false}
                                                                isFocused={false}
                                                                isHovered={false}
                                                                isOpen={false}
                                                                isPlain={false}
                                                                onToggle={[Function]}
                                                                parentRef={null}
                                                              >
                                                                Name
                                                              </DropdownToggle>
                                                            }
                                                          >
                                                            <StyledComponent
                                                              dropdownItems={
                                                                Array [
                                                                  <Item
                                                                    className=""
                                                                    component="button"
                                                                    href="#"
                                                                    isDisabled={false}
                                                                    isHovered={false}
                                                                  >
                                                                    Modified
                                                                  </Item>,
                                                                  <Item
                                                                    className=""
                                                                    component="button"
                                                                    href="#"
                                                                    isDisabled={false}
                                                                    isHovered={false}
                                                                  >
                                                                    Created
                                                                  </Item>,
                                                                ]
                                                              }
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Sort__Dropdown-sc-21g5aw-0",
                                                                    "isStatic": true,
                                                                    "lastClassName": "kdSQuN",
                                                                    "rules": Array [
                                                                      "&&&{> button{min-height:30px;min-width:70px;height:30px;padding:0 10px;margin:0px;> span{width:auto;}> svg{margin:0px;padding-top:3px;padding-left:3px;}}}",
                                                                    ],
                                                                  },
                                                                  "displayName": "Sort__Dropdown",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Sort__Dropdown-sc-21g5aw-0",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              isOpen={false}
                                                              onSelect={[Function]}
                                                              onToggle={[Function]}
                                                              style={
                                                                Object {
                                                                  "marginRight": "20px",
                                                                }
                                                              }
                                                              toggle={
                                                                <DropdownToggle
                                                                  className=""
                                                                  iconComponent={[Function]}
                                                                  id="awx-sort"
                                                                  isActive={false}
                                                                  isFocused={false}
                                                                  isHovered={false}
                                                                  isOpen={false}
                                                                  isPlain={false}
                                                                  onToggle={[Function]}
                                                                  parentRef={null}
                                                                >
                                                                  Name
                                                                </DropdownToggle>
                                                              }
                                                            >
                                                              <Dropdown
                                                                className="Sort__Dropdown-sc-21g5aw-0 kdSQuN"
                                                                direction="down"
                                                                dropdownItems={
                                                                  Array [
                                                                    <Item
                                                                      className=""
                                                                      component="button"
                                                                      href="#"
                                                                      isDisabled={false}
                                                                      isHovered={false}
                                                                    >
                                                                      Modified
                                                                    </Item>,
                                                                    <Item
                                                                      className=""
                                                                      component="button"
                                                                      href="#"
                                                                      isDisabled={false}
                                                                      isHovered={false}
                                                                    >
                                                                      Created
                                                                    </Item>,
                                                                  ]
                                                                }
                                                                isOpen={false}
                                                                isPlain={false}
                                                                onSelect={[Function]}
                                                                onToggle={[Function]}
                                                                position="left"
                                                                style={
                                                                  Object {
                                                                    "marginRight": "20px",
                                                                  }
                                                                }
                                                                toggle={
                                                                  <DropdownToggle
                                                                    className=""
                                                                    iconComponent={[Function]}
                                                                    id="awx-sort"
                                                                    isActive={false}
                                                                    isFocused={false}
                                                                    isHovered={false}
                                                                    isOpen={false}
                                                                    isPlain={false}
                                                                    onToggle={[Function]}
                                                                    parentRef={null}
                                                                  >
                                                                    Name
                                                                  </DropdownToggle>
                                                                }
                                                              >
                                                                <div
                                                                  className="pf-c-dropdown Sort__Dropdown-sc-21g5aw-0 kdSQuN"
                                                                  onToggle={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "marginRight": "20px",
                                                                    }
                                                                  }
                                                                >
                                                                  <DropdownToggle
                                                                    ariaHasPopup={true}
                                                                    className=""
                                                                    iconComponent={[Function]}
                                                                    id="awx-sort"
                                                                    isActive={false}
                                                                    isFocused={false}
                                                                    isHovered={false}
                                                                    isOpen={false}
                                                                    isPlain={false}
                                                                    key=".0"
                                                                    onEnter={[Function]}
                                                                    onToggle={[Function]}
                                                                    parentRef={
                                                                      <div
                                                                        class="pf-c-dropdown Sort__Dropdown-sc-21g5aw-0 kdSQuN"
                                                                        style="margin-right: 20px;"
                                                                      >
                                                                        <button
                                                                          aria-expanded="false"
                                                                          aria-haspopup="true"
                                                                          class="pf-c-dropdown__toggle"
                                                                          id="awx-sort"
                                                                          type="button"
                                                                        >
                                                                          <span
                                                                            class="pf-c-dropdown__toggle-text"
                                                                          >
                                                                            Name
                                                                          </span>
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            class="pf-c-dropdown__toggle-icon"
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style="vertical-align: -0.125em;"
                                                                            viewBox="0 0 320 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </button>
                                                                      </div>
                                                                    }
                                                                  >
                                                                    <DropdownToggle
                                                                      ariaHasPopup={true}
                                                                      className=""
                                                                      id="awx-sort"
                                                                      isActive={false}
                                                                      isDisabled={false}
                                                                      isFocused={false}
                                                                      isHovered={false}
                                                                      isOpen={false}
                                                                      isPlain={false}
                                                                      onEnter={[Function]}
                                                                      onToggle={[Function]}
                                                                      parentRef={
                                                                        <div
                                                                          class="pf-c-dropdown Sort__Dropdown-sc-21g5aw-0 kdSQuN"
                                                                          style="margin-right: 20px;"
                                                                        >
                                                                          <button
                                                                            aria-expanded="false"
                                                                            aria-haspopup="true"
                                                                            class="pf-c-dropdown__toggle"
                                                                            id="awx-sort"
                                                                            type="button"
                                                                          >
                                                                            <span
                                                                              class="pf-c-dropdown__toggle-text"
                                                                            >
                                                                              Name
                                                                            </span>
                                                                            <svg
                                                                              aria-hidden="true"
                                                                              class="pf-c-dropdown__toggle-icon"
                                                                              fill="currentColor"
                                                                              height="1em"
                                                                              role="img"
                                                                              style="vertical-align: -0.125em;"
                                                                              viewBox="0 0 320 512"
                                                                              width="1em"
                                                                            >
                                                                              <path
                                                                                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                transform=""
                                                                              />
                                                                            </svg>
                                                                          </button>
                                                                        </div>
                                                                      }
                                                                    >
                                                                      <button
                                                                        aria-expanded={false}
                                                                        aria-haspopup={true}
                                                                        className="pf-c-dropdown__toggle"
                                                                        disabled={false}
                                                                        id="awx-sort"
                                                                        onClick={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          className="pf-c-dropdown__toggle-text"
                                                                        >
                                                                          Name
                                                                        </span>
                                                                        <CaretDownIcon
                                                                          className="pf-c-dropdown__toggle-icon"
                                                                          color="currentColor"
                                                                          size="sm"
                                                                          title={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            aria-labelledby={null}
                                                                            className="pf-c-dropdown__toggle-icon"
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style={
                                                                              Object {
                                                                                "verticalAlign": "-0.125em",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 320 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </CaretDownIcon>
                                                                      </button>
                                                                    </DropdownToggle>
                                                                  </DropdownToggle>
                                                                </div>
                                                              </Dropdown>
                                                            </StyledComponent>
                                                          </Sort__Dropdown>
                                                          <Styled(Button)
                                                            aria-label="Sort"
                                                            onClick={[Function]}
                                                            variant="plain"
                                                          >
                                                            <StyledComponent
                                                              aria-label="Sort"
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "sc-bdVaJa",
                                                                    "isStatic": true,
                                                                    "lastClassName": "delFyH",
                                                                    "rules": Array [
                                                                      "padding: 0;",
                                                                    ],
                                                                  },
                                                                  "displayName": "Styled(Button)",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "sc-bdVaJa",
                                                                  "target": [Function],
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              onClick={[Function]}
                                                              variant="plain"
                                                            >
                                                              <Button
                                                                aria-label="Sort"
                                                                className="sc-bdVaJa delFyH"
                                                                component="button"
                                                                isActive={false}
                                                                isBlock={false}
                                                                isDisabled={false}
                                                                isFocus={false}
                                                                isHover={false}
                                                                onClick={[Function]}
                                                                type="button"
                                                                variant="plain"
                                                              >
                                                                <button
                                                                  aria-disabled={null}
                                                                  aria-label="Sort"
                                                                  className="pf-c-button pf-m-plain sc-bdVaJa delFyH"
                                                                  disabled={false}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  <Sort__IconWrapper>
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Sort__IconWrapper-sc-21g5aw-1",
                                                                            "isStatic": true,
                                                                            "lastClassName": "fTwElO",
                                                                            "rules": Array [
                                                                              "> svg{font-size:18px;}",
                                                                            ],
                                                                          },
                                                                          "displayName": "Sort__IconWrapper",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Sort__IconWrapper-sc-21g5aw-1",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                    >
                                                                      <span
                                                                        className="Sort__IconWrapper-sc-21g5aw-1 fTwElO"
                                                                      >
                                                                        <SortAlphaUpIcon
                                                                          color="currentColor"
                                                                          size="sm"
                                                                          title={null}
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            aria-labelledby={null}
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style={
                                                                              Object {
                                                                                "verticalAlign": "-0.125em",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 448 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M107.3 36.7c-6.2-6.2-16.4-6.2-22.6 0l-80 80c-10 10-2.9 27.3 11.3 27.3h48v320c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V144h48c14.2 0 21.4-17.2 11.3-27.3zm293.4 390.4h-61.1c.7-1 1.5-2 2.3-3.1l67.5-95.7c1.4-2 2.2-4.4 2.2-6.9V300c0-6.6-5.4-12-12-12H274.5c-6.6 0-12 5.4-12 12v28.9c0 6.6 5.4 12 12 12H331c-.7 1-1.5 2-2.3 3.1l-67.2 95.2c-1.4 2-2.2 4.4-2.2 6.9V468c0 6.6 5.4 12 12 12h129.4c6.6 0 12-5.4 12-12v-28.9c0-6.7-5.4-12-12-12zm23.5-219l-57.1-168c-1.7-4.9-6.2-8.1-11.4-8.1h-39.6c-5.1 0-9.7 3.3-11.4 8.1l-57.1 168c-2.6 7.8 3.1 15.9 11.4 15.9h35.7c5.4 0 10.1-3.5 11.5-8.7l8.1-28.2h42.9l8.3 28.3A12 12 0 0 0 377 224h35.7c8.4 0 14.2-8.1 11.5-15.9zm-95-71.5l6.8-22.9 6.6 22.9z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </SortAlphaUpIcon>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </Sort__IconWrapper>
                                                                </button>
                                                              </Button>
                                                            </StyledComponent>
                                                          </Styled(Button)>
                                                        </I18n>
                                                      </Sort>
                                                    </div>
                                                  </ToolbarItem>
                                                  <DataListToolbar__AdditionalControlsWrapper>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "DataListToolbar__AdditionalControlsWrapper-ajzso8-5",
                                                            "isStatic": true,
                                                            "lastClassName": "cAcBQW",
                                                            "rules": Array [
                                                              "display:flex;flex-grow:1;justify-content:flex-end;",
                                                            ],
                                                          },
                                                          "displayName": "DataListToolbar__AdditionalControlsWrapper",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "DataListToolbar__AdditionalControlsWrapper-ajzso8-5",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="DataListToolbar__AdditionalControlsWrapper-ajzso8-5 cAcBQW"
                                                      />
                                                    </StyledComponent>
                                                  </DataListToolbar__AdditionalControlsWrapper>
                                                </div>
                                              </StyledComponent>
                                            </DataListToolbar__ColumnRight>
                                          </div>
                                        </Toolbar>
                                      </StyledComponent>
                                    </DataListToolbar__Toolbar>
                                  </div>
                                </StyledComponent>
                              </DataListToolbar__AWXToolbar>
                            </I18n>
                          </DataListToolbar>
                          <DataList
                            aria-label="{0} List"
                            className=""
                          >
                            <ul
                              aria-label="{0} List"
                              className="pf-c-data-list"
                              role="list"
                            >
                              <NotificationListItem
                                canToggleNotifications={true}
                                detailUrl="/notifications/1"
                                errorTurnedOn={false}
                                key="1"
                                notification={
                                  Object {
                                    "id": 1,
                                    "name": "Notification one",
                                    "notification_type": "email",
                                    "url": "/api/v2/notification_templates/1/",
                                  }
                                }
                                successTurnedOn={true}
                                toggleNotification={[Function]}
                              >
                                <I18n
                                  update={true}
                                  withHash={true}
                                >
                                  <DataListItem
                                    aria-labelledby="items-list-item-1"
                                    className=""
                                    isExpanded={false}
                                    key="1"
                                  >
                                    <li
                                      aria-labelledby="items-list-item-1"
                                      className="pf-c-data-list__item"
                                    >
                                      <DataListItemRow
                                        className=""
                                        key=".0"
                                        rowid="items-list-item-1"
                                      >
                                        <div
                                          className="pf-c-data-list__item-row"
                                        >
                                          <DataListItemCells
                                            className=""
                                            dataListCells={
                                              Array [
                                                <ForwardRef>
                                                  <ForwardRef
                                                    to={
                                                      Object {
                                                        "pathname": "/notifications/1",
                                                      }
                                                    }
                                                  >
                                                    <b
                                                      id="items-list-item-1"
                                                    >
                                                      Notification one
                                                    </b>
                                                  </ForwardRef>
                                                  <ForwardRef
                                                    isRead={true}
                                                  >
                                                    email
                                                  </ForwardRef>
                                                </ForwardRef>,
                                                <ForwardRef
                                                  righthalf="true"
                                                >
                                                  <ForwardRef
                                                    aria-label="Toggle notification success"
                                                    id="notification-1-success-toggle"
                                                    isChecked={true}
                                                    isDisabled={false}
                                                    label="Successful"
                                                    onChange={[Function]}
                                                  />
                                                  <ForwardRef
                                                    aria-label="Toggle notification failure"
                                                    id="notification-1-error-toggle"
                                                    isChecked={false}
                                                    isDisabled={false}
                                                    label="Failure"
                                                    onChange={[Function]}
                                                  />
                                                </ForwardRef>,
                                              ]
                                            }
                                            key=".0"
                                            rowid="items-list-item-1"
                                          >
                                            <div
                                              className="pf-c-data-list__item-content"
                                            >
                                              <NotificationListItem__DataListCell
                                                key="name"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "NotificationListItem__DataListCell-j7c411-0",
                                                        "isStatic": false,
                                                        "lastClassName": "hoXOpW",
                                                        "rules": Array [
                                                          "display:flex;justify-content:",
                                                          [Function],
                                                          ";padding-bottom:",
                                                          [Function],
                                                          ";@media screen and (min-width:768px){justify-content:",
                                                          [Function],
                                                          ";padding-bottom:0;}",
                                                        ],
                                                      },
                                                      "displayName": "NotificationListItem__DataListCell",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "NotificationListItem__DataListCell-j7c411-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <DataListCell
                                                    alignRight={false}
                                                    className="NotificationListItem__DataListCell-j7c411-0 kIdLtz"
                                                    isFilled={true}
                                                    isIcon={false}
                                                    width={1}
                                                  >
                                                    <div
                                                      className="pf-c-data-list__cell NotificationListItem__DataListCell-j7c411-0 kIdLtz"
                                                    >
                                                      <Styled(Link)
                                                        to={
                                                          Object {
                                                            "pathname": "/notifications/1",
                                                          }
                                                        }
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": true,
                                                                "lastClassName": "dlcYLn",
                                                                "rules": Array [
                                                                  "margin-right: 1.5em;",
                                                                ],
                                                              },
                                                              "displayName": "Styled(Link)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          to={
                                                            Object {
                                                              "pathname": "/notifications/1",
                                                            }
                                                          }
                                                        >
                                                          <Link
                                                            className="sc-htpNat dlcYLn"
                                                            replace={false}
                                                            to={
                                                              Object {
                                                                "pathname": "/notifications/1",
                                                              }
                                                            }
                                                          >
                                                            <a
                                                              className="sc-htpNat dlcYLn"
                                                              onClick={[Function]}
                                                            >
                                                              <b
                                                                id="items-list-item-1"
                                                              >
                                                                Notification one
                                                              </b>
                                                            </a>
                                                          </Link>
                                                        </StyledComponent>
                                                      </Styled(Link)>
                                                      <Styled(Badge)
                                                        isRead={true}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bxivhb",
                                                                "isStatic": true,
                                                                "lastClassName": "iZoxgU",
                                                                "rules": Array [
                                                                  "text-transform: capitalize;",
                                                                ],
                                                              },
                                                              "displayName": "Styled(Badge)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bxivhb",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isRead={true}
                                                        >
                                                          <Badge
                                                            className="sc-bxivhb iZoxgU"
                                                            isRead={true}
                                                          >
                                                            <span
                                                              className="pf-c-badge pf-m-read sc-bxivhb iZoxgU"
                                                            >
                                                              email
                                                            </span>
                                                          </Badge>
                                                        </StyledComponent>
                                                      </Styled(Badge)>
                                                    </div>
                                                  </DataListCell>
                                                </StyledComponent>
                                              </NotificationListItem__DataListCell>
                                              <NotificationListItem__DataListCell
                                                key="toggles"
                                                righthalf="true"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "NotificationListItem__DataListCell-j7c411-0",
                                                        "isStatic": false,
                                                        "lastClassName": "hoXOpW",
                                                        "rules": Array [
                                                          "display:flex;justify-content:",
                                                          [Function],
                                                          ";padding-bottom:",
                                                          [Function],
                                                          ";@media screen and (min-width:768px){justify-content:",
                                                          [Function],
                                                          ";padding-bottom:0;}",
                                                        ],
                                                      },
                                                      "displayName": "NotificationListItem__DataListCell",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "NotificationListItem__DataListCell-j7c411-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  righthalf="true"
                                                >
                                                  <DataListCell
                                                    alignRight={false}
                                                    className="NotificationListItem__DataListCell-j7c411-0 hoXOpW"
                                                    isFilled={true}
                                                    isIcon={false}
                                                    righthalf="true"
                                                    width={1}
                                                  >
                                                    <div
                                                      className="pf-c-data-list__cell NotificationListItem__DataListCell-j7c411-0 hoXOpW"
                                                      righthalf="true"
                                                    >
                                                      <NotificationListItem__Switch
                                                        aria-label="Toggle notification success"
                                                        id="notification-1-success-toggle"
                                                        isChecked={true}
                                                        isDisabled={false}
                                                        label="Successful"
                                                        onChange={[Function]}
                                                      >
                                                        <StyledComponent
                                                          aria-label="Toggle notification success"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "NotificationListItem__Switch-j7c411-1",
                                                                "isStatic": true,
                                                                "lastClassName": "ceuHGn",
                                                                "rules": Array [
                                                                  "display:flex;flex-wrap:no-wrap;",
                                                                ],
                                                              },
                                                              "displayName": "NotificationListItem__Switch",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "NotificationListItem__Switch-j7c411-1",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="notification-1-success-toggle"
                                                          isChecked={true}
                                                          isDisabled={false}
                                                          label="Successful"
                                                          onChange={[Function]}
                                                        >
                                                          <Switch
                                                            aria-label="Toggle notification success"
                                                            className="NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                            id="notification-1-success-toggle"
                                                            isChecked={true}
                                                            isDisabled={false}
                                                            label="Successful"
                                                            onChange={[Function]}
                                                          >
                                                            <label
                                                              className="pf-c-switch NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                              htmlFor="notification-1-success-toggle"
                                                            >
                                                              <input
                                                                aria-label="Toggle notification success"
                                                                checked={true}
                                                                className="pf-c-switch__input"
                                                                disabled={false}
                                                                id="notification-1-success-toggle"
                                                                onChange={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <span
                                                                className="pf-c-switch__toggle"
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-on"
                                                              >
                                                                Successful
                                                              </span>
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-off"
                                                              >
                                                                Successful
                                                              </span>
                                                            </label>
                                                          </Switch>
                                                        </StyledComponent>
                                                      </NotificationListItem__Switch>
                                                      <NotificationListItem__Switch
                                                        aria-label="Toggle notification failure"
                                                        id="notification-1-error-toggle"
                                                        isChecked={false}
                                                        isDisabled={false}
                                                        label="Failure"
                                                        onChange={[Function]}
                                                      >
                                                        <StyledComponent
                                                          aria-label="Toggle notification failure"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "NotificationListItem__Switch-j7c411-1",
                                                                "isStatic": true,
                                                                "lastClassName": "ceuHGn",
                                                                "rules": Array [
                                                                  "display:flex;flex-wrap:no-wrap;",
                                                                ],
                                                              },
                                                              "displayName": "NotificationListItem__Switch",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "NotificationListItem__Switch-j7c411-1",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="notification-1-error-toggle"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          label="Failure"
                                                          onChange={[Function]}
                                                        >
                                                          <Switch
                                                            aria-label="Toggle notification failure"
                                                            className="NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                            id="notification-1-error-toggle"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            label="Failure"
                                                            onChange={[Function]}
                                                          >
                                                            <label
                                                              className="pf-c-switch NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                              htmlFor="notification-1-error-toggle"
                                                            >
                                                              <input
                                                                aria-label="Toggle notification failure"
                                                                checked={false}
                                                                className="pf-c-switch__input"
                                                                disabled={false}
                                                                id="notification-1-error-toggle"
                                                                onChange={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <span
                                                                className="pf-c-switch__toggle"
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-on"
                                                              >
                                                                Failure
                                                              </span>
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-off"
                                                              >
                                                                Failure
                                                              </span>
                                                            </label>
                                                          </Switch>
                                                        </StyledComponent>
                                                      </NotificationListItem__Switch>
                                                    </div>
                                                  </DataListCell>
                                                </StyledComponent>
                                              </NotificationListItem__DataListCell>
                                            </div>
                                          </DataListItemCells>
                                        </div>
                                      </DataListItemRow>
                                    </li>
                                  </DataListItem>
                                </I18n>
                              </NotificationListItem>
                              <NotificationListItem
                                canToggleNotifications={true}
                                detailUrl="/notifications/2"
                                errorTurnedOn={true}
                                key="2"
                                notification={
                                  Object {
                                    "id": 2,
                                    "name": "Notification two",
                                    "notification_type": "email",
                                    "url": "/api/v2/notification_templates/2/",
                                  }
                                }
                                successTurnedOn={false}
                                toggleNotification={[Function]}
                              >
                                <I18n
                                  update={true}
                                  withHash={true}
                                >
                                  <DataListItem
                                    aria-labelledby="items-list-item-2"
                                    className=""
                                    isExpanded={false}
                                    key="2"
                                  >
                                    <li
                                      aria-labelledby="items-list-item-2"
                                      className="pf-c-data-list__item"
                                    >
                                      <DataListItemRow
                                        className=""
                                        key=".0"
                                        rowid="items-list-item-2"
                                      >
                                        <div
                                          className="pf-c-data-list__item-row"
                                        >
                                          <DataListItemCells
                                            className=""
                                            dataListCells={
                                              Array [
                                                <ForwardRef>
                                                  <ForwardRef
                                                    to={
                                                      Object {
                                                        "pathname": "/notifications/2",
                                                      }
                                                    }
                                                  >
                                                    <b
                                                      id="items-list-item-2"
                                                    >
                                                      Notification two
                                                    </b>
                                                  </ForwardRef>
                                                  <ForwardRef
                                                    isRead={true}
                                                  >
                                                    email
                                                  </ForwardRef>
                                                </ForwardRef>,
                                                <ForwardRef
                                                  righthalf="true"
                                                >
                                                  <ForwardRef
                                                    aria-label="Toggle notification success"
                                                    id="notification-2-success-toggle"
                                                    isChecked={false}
                                                    isDisabled={false}
                                                    label="Successful"
                                                    onChange={[Function]}
                                                  />
                                                  <ForwardRef
                                                    aria-label="Toggle notification failure"
                                                    id="notification-2-error-toggle"
                                                    isChecked={true}
                                                    isDisabled={false}
                                                    label="Failure"
                                                    onChange={[Function]}
                                                  />
                                                </ForwardRef>,
                                              ]
                                            }
                                            key=".0"
                                            rowid="items-list-item-2"
                                          >
                                            <div
                                              className="pf-c-data-list__item-content"
                                            >
                                              <NotificationListItem__DataListCell
                                                key="name"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "NotificationListItem__DataListCell-j7c411-0",
                                                        "isStatic": false,
                                                        "lastClassName": "hoXOpW",
                                                        "rules": Array [
                                                          "display:flex;justify-content:",
                                                          [Function],
                                                          ";padding-bottom:",
                                                          [Function],
                                                          ";@media screen and (min-width:768px){justify-content:",
                                                          [Function],
                                                          ";padding-bottom:0;}",
                                                        ],
                                                      },
                                                      "displayName": "NotificationListItem__DataListCell",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "NotificationListItem__DataListCell-j7c411-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <DataListCell
                                                    alignRight={false}
                                                    className="NotificationListItem__DataListCell-j7c411-0 kIdLtz"
                                                    isFilled={true}
                                                    isIcon={false}
                                                    width={1}
                                                  >
                                                    <div
                                                      className="pf-c-data-list__cell NotificationListItem__DataListCell-j7c411-0 kIdLtz"
                                                    >
                                                      <Styled(Link)
                                                        to={
                                                          Object {
                                                            "pathname": "/notifications/2",
                                                          }
                                                        }
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": true,
                                                                "lastClassName": "dlcYLn",
                                                                "rules": Array [
                                                                  "margin-right: 1.5em;",
                                                                ],
                                                              },
                                                              "displayName": "Styled(Link)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          to={
                                                            Object {
                                                              "pathname": "/notifications/2",
                                                            }
                                                          }
                                                        >
                                                          <Link
                                                            className="sc-htpNat dlcYLn"
                                                            replace={false}
                                                            to={
                                                              Object {
                                                                "pathname": "/notifications/2",
                                                              }
                                                            }
                                                          >
                                                            <a
                                                              className="sc-htpNat dlcYLn"
                                                              onClick={[Function]}
                                                            >
                                                              <b
                                                                id="items-list-item-2"
                                                              >
                                                                Notification two
                                                              </b>
                                                            </a>
                                                          </Link>
                                                        </StyledComponent>
                                                      </Styled(Link)>
                                                      <Styled(Badge)
                                                        isRead={true}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bxivhb",
                                                                "isStatic": true,
                                                                "lastClassName": "iZoxgU",
                                                                "rules": Array [
                                                                  "text-transform: capitalize;",
                                                                ],
                                                              },
                                                              "displayName": "Styled(Badge)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bxivhb",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isRead={true}
                                                        >
                                                          <Badge
                                                            className="sc-bxivhb iZoxgU"
                                                            isRead={true}
                                                          >
                                                            <span
                                                              className="pf-c-badge pf-m-read sc-bxivhb iZoxgU"
                                                            >
                                                              email
                                                            </span>
                                                          </Badge>
                                                        </StyledComponent>
                                                      </Styled(Badge)>
                                                    </div>
                                                  </DataListCell>
                                                </StyledComponent>
                                              </NotificationListItem__DataListCell>
                                              <NotificationListItem__DataListCell
                                                key="toggles"
                                                righthalf="true"
                                              >
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "NotificationListItem__DataListCell-j7c411-0",
                                                        "isStatic": false,
                                                        "lastClassName": "hoXOpW",
                                                        "rules": Array [
                                                          "display:flex;justify-content:",
                                                          [Function],
                                                          ";padding-bottom:",
                                                          [Function],
                                                          ";@media screen and (min-width:768px){justify-content:",
                                                          [Function],
                                                          ";padding-bottom:0;}",
                                                        ],
                                                      },
                                                      "displayName": "NotificationListItem__DataListCell",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "NotificationListItem__DataListCell-j7c411-0",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  righthalf="true"
                                                >
                                                  <DataListCell
                                                    alignRight={false}
                                                    className="NotificationListItem__DataListCell-j7c411-0 hoXOpW"
                                                    isFilled={true}
                                                    isIcon={false}
                                                    righthalf="true"
                                                    width={1}
                                                  >
                                                    <div
                                                      className="pf-c-data-list__cell NotificationListItem__DataListCell-j7c411-0 hoXOpW"
                                                      righthalf="true"
                                                    >
                                                      <NotificationListItem__Switch
                                                        aria-label="Toggle notification success"
                                                        id="notification-2-success-toggle"
                                                        isChecked={false}
                                                        isDisabled={false}
                                                        label="Successful"
                                                        onChange={[Function]}
                                                      >
                                                        <StyledComponent
                                                          aria-label="Toggle notification success"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "NotificationListItem__Switch-j7c411-1",
                                                                "isStatic": true,
                                                                "lastClassName": "ceuHGn",
                                                                "rules": Array [
                                                                  "display:flex;flex-wrap:no-wrap;",
                                                                ],
                                                              },
                                                              "displayName": "NotificationListItem__Switch",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "NotificationListItem__Switch-j7c411-1",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="notification-2-success-toggle"
                                                          isChecked={false}
                                                          isDisabled={false}
                                                          label="Successful"
                                                          onChange={[Function]}
                                                        >
                                                          <Switch
                                                            aria-label="Toggle notification success"
                                                            className="NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                            id="notification-2-success-toggle"
                                                            isChecked={false}
                                                            isDisabled={false}
                                                            label="Successful"
                                                            onChange={[Function]}
                                                          >
                                                            <label
                                                              className="pf-c-switch NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                              htmlFor="notification-2-success-toggle"
                                                            >
                                                              <input
                                                                aria-label="Toggle notification success"
                                                                checked={false}
                                                                className="pf-c-switch__input"
                                                                disabled={false}
                                                                id="notification-2-success-toggle"
                                                                onChange={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <span
                                                                className="pf-c-switch__toggle"
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-on"
                                                              >
                                                                Successful
                                                              </span>
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-off"
                                                              >
                                                                Successful
                                                              </span>
                                                            </label>
                                                          </Switch>
                                                        </StyledComponent>
                                                      </NotificationListItem__Switch>
                                                      <NotificationListItem__Switch
                                                        aria-label="Toggle notification failure"
                                                        id="notification-2-error-toggle"
                                                        isChecked={true}
                                                        isDisabled={false}
                                                        label="Failure"
                                                        onChange={[Function]}
                                                      >
                                                        <StyledComponent
                                                          aria-label="Toggle notification failure"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "NotificationListItem__Switch-j7c411-1",
                                                                "isStatic": true,
                                                                "lastClassName": "ceuHGn",
                                                                "rules": Array [
                                                                  "display:flex;flex-wrap:no-wrap;",
                                                                ],
                                                              },
                                                              "displayName": "NotificationListItem__Switch",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "NotificationListItem__Switch-j7c411-1",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          id="notification-2-error-toggle"
                                                          isChecked={true}
                                                          isDisabled={false}
                                                          label="Failure"
                                                          onChange={[Function]}
                                                        >
                                                          <Switch
                                                            aria-label="Toggle notification failure"
                                                            className="NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                            id="notification-2-error-toggle"
                                                            isChecked={true}
                                                            isDisabled={false}
                                                            label="Failure"
                                                            onChange={[Function]}
                                                          >
                                                            <label
                                                              className="pf-c-switch NotificationListItem__Switch-j7c411-1 ceuHGn"
                                                              htmlFor="notification-2-error-toggle"
                                                            >
                                                              <input
                                                                aria-label="Toggle notification failure"
                                                                checked={true}
                                                                className="pf-c-switch__input"
                                                                disabled={false}
                                                                id="notification-2-error-toggle"
                                                                onChange={[Function]}
                                                                type="checkbox"
                                                              />
                                                              <span
                                                                className="pf-c-switch__toggle"
                                                              />
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-on"
                                                              >
                                                                Failure
                                                              </span>
                                                              <span
                                                                aria-hidden="true"
                                                                className="pf-c-switch__label pf-m-off"
                                                              >
                                                                Failure
                                                              </span>
                                                            </label>
                                                          </Switch>
                                                        </StyledComponent>
                                                      </NotificationListItem__Switch>
                                                    </div>
                                                  </DataListCell>
                                                </StyledComponent>
                                              </NotificationListItem__DataListCell>
                                            </div>
                                          </DataListItemCells>
                                        </div>
                                      </DataListItemRow>
                                    </li>
                                  </DataListItem>
                                </I18n>
                              </NotificationListItem>
                            </ul>
                          </DataList>
                          <Pagination
                            count={2}
                            onSetPage={[Function]}
                            page={1}
                            pageCount={1}
                            pageSizeOptions={
                              Array [
                                5,
                                10,
                                25,
                                50,
                              ]
                            }
                            page_size={5}
                            showPageSizeOptions={true}
                            style={null}
                          >
                            <I18n
                              update={true}
                              withHash={true}
                            >
                              <div
                                className="awx-pagination"
                                style={null}
                              >
                                <div
                                  className="awx-pagination__page-size-selection"
                                >
                                  <WithI18n
                                    id="Items Per Page"
                                  >
                                    <I18n
                                      update={true}
                                      withHash={true}
                                    >
                                      <Trans
                                        i18n={"/i18n/"}
                                        id="Items Per Page"
                                      >
                                        <Render
                                          value={null}
                                        />
                                      </Trans>
                                    </I18n>
                                  </WithI18n>
                                  <Dropdown
                                    className=""
                                    direction="up"
                                    dropdownItems={
                                      Array [
                                        <Item
                                          className=""
                                          component="button"
                                          href="#"
                                          isDisabled={false}
                                          isHovered={false}
                                        >
                                          50
                                        </Item>,
                                        <Item
                                          className=""
                                          component="button"
                                          href="#"
                                          isDisabled={false}
                                          isHovered={false}
                                        >
                                          25
                                        </Item>,
                                        <Item
                                          className=""
                                          component="button"
                                          href="#"
                                          isDisabled={false}
                                          isHovered={false}
                                        >
                                          10
                                        </Item>,
                                      ]
                                    }
                                    isOpen={false}
                                    isPlain={false}
                                    onSelect={[Function]}
                                    onToggle={[Function]}
                                    position="left"
                                    toggle={
                                      <DropdownToggle
                                        className="togglePageSize"
                                        iconComponent={[Function]}
                                        id=""
                                        isActive={false}
                                        isFocused={false}
                                        isHovered={false}
                                        isOpen={false}
                                        isPlain={false}
                                        onToggle={[Function]}
                                        parentRef={null}
                                      >
                                        5
                                      </DropdownToggle>
                                    }
                                  >
                                    <div
                                      className="pf-c-dropdown pf-m-top"
                                      onToggle={[Function]}
                                    >
                                      <DropdownToggle
                                        ariaHasPopup={true}
                                        className="togglePageSize"
                                        iconComponent={[Function]}
                                        id="pf-toggle-id-1"
                                        isActive={false}
                                        isFocused={false}
                                        isHovered={false}
                                        isOpen={false}
                                        isPlain={false}
                                        key=".0"
                                        onEnter={[Function]}
                                        onToggle={[Function]}
                                        parentRef={
                                          <div
                                            class="pf-c-dropdown pf-m-top"
                                          >
                                            <button
                                              aria-expanded="false"
                                              aria-haspopup="true"
                                              class="pf-c-dropdown__toggle togglePageSize"
                                              id="pf-toggle-id-1"
                                              type="button"
                                            >
                                              <span
                                                class="pf-c-dropdown__toggle-text"
                                              >
                                                5
                                              </span>
                                              <svg
                                                aria-hidden="true"
                                                class="pf-c-dropdown__toggle-icon"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style="vertical-align: -0.125em;"
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </button>
                                          </div>
                                        }
                                      >
                                        <DropdownToggle
                                          ariaHasPopup={true}
                                          className="togglePageSize"
                                          id="pf-toggle-id-1"
                                          isActive={false}
                                          isDisabled={false}
                                          isFocused={false}
                                          isHovered={false}
                                          isOpen={false}
                                          isPlain={false}
                                          onEnter={[Function]}
                                          onToggle={[Function]}
                                          parentRef={
                                            <div
                                              class="pf-c-dropdown pf-m-top"
                                            >
                                              <button
                                                aria-expanded="false"
                                                aria-haspopup="true"
                                                class="pf-c-dropdown__toggle togglePageSize"
                                                id="pf-toggle-id-1"
                                                type="button"
                                              >
                                                <span
                                                  class="pf-c-dropdown__toggle-text"
                                                >
                                                  5
                                                </span>
                                                <svg
                                                  aria-hidden="true"
                                                  class="pf-c-dropdown__toggle-icon"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style="vertical-align: -0.125em;"
                                                  viewBox="0 0 320 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </button>
                                            </div>
                                          }
                                        >
                                          <button
                                            aria-expanded={false}
                                            aria-haspopup={true}
                                            className="pf-c-dropdown__toggle togglePageSize"
                                            disabled={false}
                                            id="pf-toggle-id-1"
                                            onClick={[Function]}
                                            onKeyDown={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="pf-c-dropdown__toggle-text"
                                            >
                                              5
                                            </span>
                                            <CaretDownIcon
                                              className="pf-c-dropdown__toggle-icon"
                                              color="currentColor"
                                              size="sm"
                                              title={null}
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                className="pf-c-dropdown__toggle-icon"
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 320 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                  transform=""
                                                />
                                              </svg>
                                            </CaretDownIcon>
                                          </button>
                                        </DropdownToggle>
                                      </DropdownToggle>
                                    </div>
                                  </Dropdown>
                                </div>
                                <div
                                  className="awx-pagination__counts"
                                >
                                  <div
                                    className="awx-pagination__item-count"
                                  >
                                    <WithI18n
                                      id="Items {itemMin} – {itemMax} of {count}"
                                      values={
                                        Object {
                                          "count": 2,
                                          "itemMax": 2,
                                          "itemMin": 1,
                                        }
                                      }
                                    >
                                      <I18n
                                        update={true}
                                        withHash={true}
                                      >
                                        <Trans
                                          i18n={"/i18n/"}
                                          id="Items {itemMin} – {itemMax} of {count}"
                                          values={
                                            Object {
                                              "count": 2,
                                              "itemMax": 2,
                                              "itemMin": 1,
                                            }
                                          }
                                        >
                                          <Render
                                            value={null}
                                          />
                                        </Trans>
                                      </I18n>
                                    </WithI18n>
                                  </div>
                                </div>
                              </div>
                            </I18n>
                          </Pagination>
                        </I18n>
                      </PaginatedDataList>
                    </Route>
                  </withRouter(PaginatedDataList)>
                </OrganizationNotifications>
              </Route>
            </withRouter(OrganizationNotifications)>
          </Component>
        </Provider>
      </Component>
    </Provider>
  </RootDialogProvider>
</Wrap>
`;
